{"version":3,"sources":["components/Forwarder.js","framework/main.js","components/Framework.js","App.js","index.js"],"names":["Forwarder","history","useHistory","useEffect","push","run","canvas","renderer","THREE","camera","position","set","up","lookAt","scene","objects","sphereGeometry","solarSystem","add","sunMaterial","emissive","sunMesh","scale","earthOrbit","x","earthMaterial","color","earthMesh","moonOrbit","moonMaterial","moonMesh","light","requestAnimationFrame","render","time","domElement","pixelRatio","window","devicePixelRatio","width","clientWidth","height","clientHeight","needResize","setSize","resizeRendererToDisplaySize","aspect","updateProjectionMatrix","forEach","obj","rotation","y","Framework","document","querySelector","id","App","exact","path","to","ReactDOM","StrictMode","getElementById"],"mappings":"0NAWeA,EARG,WAChB,IAAMC,EAAUC,cAIhB,OAHAC,qBAAU,WACRF,EAAQG,KAAK,iBAER,M,OCyEMC,EA/EH,SAACC,GACX,IAAMC,EAAW,IAAIC,IAAoB,CAAEF,WAErCG,EAAS,IAAID,IAAwB,GAAI,EAAG,GAAK,KACvDC,EAAOC,SAASC,IAAI,EAAG,GAAI,GAC3BF,EAAOG,GAAGD,IAAI,EAAG,EAAG,GACpBF,EAAOI,OAAO,EAAG,EAAG,GACpB,IAAMC,EAAQ,IAAIN,IAEZO,EAAU,GACVC,EAAiB,IAAIR,IAAqB,EAAG,EAAG,GAEhDS,EAAc,IAAIT,IACxBM,EAAMI,IAAID,GACVF,EAAQX,KAAKa,GAEb,IAAME,EAAc,IAAIX,IAAwB,CAAEY,SAAU,WACtDC,EAAU,IAAIb,IAAWQ,EAAgBG,GAC/CE,EAAQC,MAAMX,IAAI,EAAG,EAAG,GACxBM,EAAYC,IAAIG,GAChBN,EAAQX,KAAKiB,GAEb,IAAME,EAAa,IAAIf,IACvBe,EAAWb,SAASc,EAAI,GACxBP,EAAYC,IAAIK,GAChBR,EAAQX,KAAKmB,GAEb,IAAME,EAAgB,IAAIjB,IAAwB,CAACkB,MAAO,QAAUN,SAAU,UACxEO,EAAY,IAAInB,IAAWQ,EAAgBS,GACjDF,EAAWL,IAAIS,GACfZ,EAAQX,KAAKuB,GAEb,IAAMC,EAAY,IAAIpB,IACtBoB,EAAUlB,SAASc,EAAI,EACvBD,EAAWL,IAAIU,GAEf,IAAMC,EAAe,IAAIrB,IAAwB,CAACkB,MAAO,QAAUN,SAAU,UACvEU,EAAW,IAAItB,IAAWQ,EAAgBa,GAChDC,EAASR,MAAMX,IAAI,GAAI,GAAI,IAC3BiB,EAAUV,IAAIY,GACdf,EAAQX,KAAK0B,GAIb,IAAMC,EAAQ,IAAIvB,IAAiB,SAAU,GAC7CM,EAAMI,IAAIa,GA+BVC,uBAjBA,SAASC,EAAOC,GAEd,GADAA,GAAQ,KAb0B,SAAC3B,GACnC,IAAMD,EAASC,EAAS4B,WAClBC,EAAaC,OAAOC,iBACpBC,EAASjC,EAAOkC,YAAcJ,EAAc,EAC5CK,EAAUnC,EAAOoC,aAAeN,EAAc,EAC9CO,EAAarC,EAAOiC,QAAUA,GAASjC,EAAOmC,SAAWA,EAI/D,OAHIE,GACFpC,EAASqC,QAAQL,EAAOE,GAAQ,GAE3BE,EAKHE,CAA4BtC,GAAW,CACzC,IAAMD,EAASC,EAAS4B,WACxB1B,EAAOqC,OAASxC,EAAOkC,YAAclC,EAAOoC,aAC5CjC,EAAOsC,yBAGThC,EAAQiC,SAAQ,SAACC,GACfA,EAAIC,SAASC,EAAIjB,KAGnB3B,EAAS0B,OAAOnB,EAAOL,GAEvBuB,sBAAsBC,O,OC/DXmB,EATG,WAMhB,OALAjD,qBAAU,WACR,IAAMG,EAAS+C,SAASC,cAAc,MACtCjD,EAAIC,MAGC,wBAAQiD,GAAG,OCiBLC,EArBH,WACV,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,cAAlB,SACE,cAAC,IAAD,CAAMC,GAAG,QAAT,oBAEF,cAAC,IAAD,CAAOD,KAAM,CAAC,QAAS,mBAAvB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,aAAZ,SACE,uDCdVE,IAAS3B,OACP,cAAC,IAAM4B,WAAP,UACE,cAAC,EAAD,MAEFR,SAASS,eAAe,W","file":"static/js/main.004eb7dd.chunk.js","sourcesContent":["import { useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Forwarder = () => {\n  const history = useHistory();\n  useEffect(() => {\n    history.push(\"/framework\");\n  });\n  return null;\n};\n\nexport default Forwarder;","import * as THREE from \"three\";\n\nconst run = (canvas) => {\n  const renderer = new THREE.WebGLRenderer({ canvas });\n\n  const camera = new THREE.PerspectiveCamera(40, 2, 0.1, 1000);\n  camera.position.set(0, 50, 0);\n  camera.up.set(0, 0, 1);\n  camera.lookAt(0, 0, 0);\n  const scene = new THREE.Scene();\n\n  const objects = [];\n  const sphereGeometry = new THREE.SphereGeometry(1, 6, 6);\n\n  const solarSystem = new THREE.Object3D();\n  scene.add(solarSystem);\n  objects.push(solarSystem);\n\n  const sunMaterial = new THREE.MeshPhongMaterial({ emissive: 0xffff00 });\n  const sunMesh = new THREE.Mesh(sphereGeometry, sunMaterial);\n  sunMesh.scale.set(5, 5, 5);\n  solarSystem.add(sunMesh);\n  objects.push(sunMesh);\n\n  const earthOrbit = new THREE.Object3D();\n  earthOrbit.position.x = 10;\n  solarSystem.add(earthOrbit);\n  objects.push(earthOrbit);\n\n  const earthMaterial = new THREE.MeshPhongMaterial({color: 0x2233FF, emissive: 0x112244});\n  const earthMesh = new THREE.Mesh(sphereGeometry, earthMaterial);\n  earthOrbit.add(earthMesh);\n  objects.push(earthMesh);\n\n  const moonOrbit = new THREE.Object3D();\n  moonOrbit.position.x = 2;\n  earthOrbit.add(moonOrbit);\n\n  const moonMaterial = new THREE.MeshPhongMaterial({color: 0x888888, emissive: 0x222222});\n  const moonMesh = new THREE.Mesh(sphereGeometry, moonMaterial);\n  moonMesh.scale.set(0.5,0.5,0.5);\n  moonOrbit.add(moonMesh);\n  objects.push(moonMesh);\n\n\n\n  const light = new THREE.PointLight(0xffffff, 3);\n  scene.add(light);\n\n  const resizeRendererToDisplaySize = (renderer) => {\n    const canvas = renderer.domElement;\n    const pixelRatio = window.devicePixelRatio;\n    const width = (canvas.clientWidth * pixelRatio) | 0;\n    const height = (canvas.clientHeight * pixelRatio) | 0;\n    const needResize = canvas.width !== width || canvas.height !== height;\n    if (needResize) {\n      renderer.setSize(width, height, false);\n    }\n    return needResize;\n  };\n\n  function render(time) {\n    time *= 0.001;\n    if (resizeRendererToDisplaySize(renderer)) {\n      const canvas = renderer.domElement;\n      camera.aspect = canvas.clientWidth / canvas.clientHeight;\n      camera.updateProjectionMatrix();\n    }\n\n    objects.forEach((obj) => {\n      obj.rotation.y = time;\n    })\n\n    renderer.render(scene, camera);\n\n    requestAnimationFrame(render);\n  }\n\n  requestAnimationFrame(render);\n};\n\nexport default run;\n","import { useEffect } from \"react\";\nimport run from \"../framework/main\";\n\nconst Framework = () => {\n  useEffect(() => {\n    const canvas = document.querySelector(\"#c\");\n    run(canvas);\n  });\n\n  return <canvas id=\"c\"></canvas>;\n};\n\nexport default Framework;\n","import \"./App.css\";\nimport { Link, BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Forwarder from \"./components/Forwarder\";\nimport Framework from \"./components/Framework\";\n\nconst App = () => {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\">\n          <Forwarder />\n        </Route>\n        <Route exact path=\"/framework/\">\n          <Link to=\"/play\">play</Link>\n        </Route>\n        <Route path={[\"/play\", \"/framework/play\"]}>\n          <Framework />\n        </Route>\n        <Route path=\"/:whatever\">\n          <p>page not found</p>\n        </Route>\n      </Switch>\n    </Router>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}