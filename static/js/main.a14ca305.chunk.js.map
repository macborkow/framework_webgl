{"version":3,"sources":["components/Forwarder.js","framework/main.js","components/Framework.js","App.js","index.js"],"names":["Forwarder","history","useHistory","useEffect","push","run","canvas","renderer","THREE","physicallyCorrectLights","camera","position","set","controls","OrbitControls","target","update","scene","loadManager","loader","texture","load","loadingElem","document","querySelector","progressBarElem","onLoad","style","display","wrapS","wrapT","magFilter","repeat","planeSize","planeGeo","planeMat","map","side","mesh","rotation","x","Math","PI","add","cubeGeo","cubeMat","color","cubeSize","sphereGeo","sphereMat","sphereRadius","onProgress","urlOfLastItemLoaded","itemsLoaded","itemsTotal","progress","transform","light","power","decay","distance","Infinity","requestAnimationFrame","render","time","domElement","width","clientWidth","height","clientHeight","needResize","setSize","resizeRendererToDisplaySize","aspect","updateProjectionMatrix","Framework","id","className","App","exact","path","to","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a14ca305.chunk.js","sourcesContent":["import { useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Forwarder = () => {\n  const history = useHistory();\n  useEffect(() => {\n    history.push(\"/framework\");\n  });\n  return null;\n};\n\nexport default Forwarder;","import * as THREE from \"three\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\n\nconst run = (canvas) => {\n  const renderer = new THREE.WebGLRenderer({ canvas });\n  renderer.physicallyCorrectLights = true;\n  const fov = 45;\n  const aspect = 2; // the canvas default\n  const near = 0.1;\n  const far = 100;\n  const camera = new THREE.PerspectiveCamera(fov, aspect, near, far);\n  camera.position.set(0, 10, 20);\n\n  const controls = new OrbitControls(camera, canvas);\n  controls.target.set(0, 5, 0);\n  controls.update();\n  \n  const scene = new THREE.Scene();\n\n  const loadManager = new THREE.LoadingManager();\n  const loader = new THREE.TextureLoader(loadManager);\n\n  const planeSize = 40;\n \n  const texture = loader.load('https://threejsfundamentals.org/threejs/resources/images/checker.png');\n  \n  const loadingElem = document.querySelector(\"#loading\");\n  const progressBarElem = loadingElem.querySelector(\".progressbar\");\n\n  loadManager.onLoad = () => {\n    loadingElem.style.display = \"none\";\n    texture.wrapS = THREE.RepeatWrapping;\n    texture.wrapT = THREE.RepeatWrapping;\n    texture.magFilter = THREE.NearestFilter;\n    const repeats = planeSize / 2;\n    texture.repeat.set(repeats, repeats);\n\n    const planeGeo = new THREE.PlaneGeometry(planeSize, planeSize);\n    const planeMat = new THREE.MeshPhongMaterial({\n      map: texture,\n      side: THREE.DoubleSide,\n    });\n    const mesh = new THREE.Mesh(planeGeo, planeMat);\n    mesh.rotation.x = Math.PI * -.5;\n    scene.add(mesh);\n  };\n\n  {\n    const cubeSize = 4;\n    const cubeGeo = new THREE.BoxGeometry(cubeSize, cubeSize, cubeSize);\n    const cubeMat = new THREE.MeshPhongMaterial({color: '#8AC'});\n    const mesh = new THREE.Mesh(cubeGeo, cubeMat);\n    mesh.position.set(cubeSize + 1, cubeSize / 2, 0);\n    scene.add(mesh);\n  }\n  {\n    const sphereRadius = 3;\n    const sphereWidthDivisions = 32;\n    const sphereHeightDivisions = 16;\n    const sphereGeo = new THREE.SphereGeometry(sphereRadius, sphereWidthDivisions, sphereHeightDivisions);\n    const sphereMat = new THREE.MeshPhongMaterial({color: '#CA8'});\n    const mesh = new THREE.Mesh(sphereGeo, sphereMat);\n    mesh.position.set(-sphereRadius - 1, sphereRadius + 2, 0);\n    scene.add(mesh);\n  }\n\n  loadManager.onProgress = (urlOfLastItemLoaded, itemsLoaded, itemsTotal) => {\n    const progress = itemsLoaded / itemsTotal;\n    progressBarElem.style.transform = `scaleX(${progress})`;\n  };\n\n  const color = 0xFFFFFF;\n  const intensity = 1;\n  const light = new THREE.PointLight(color, intensity);\n  light.power = 800;\n  light.decay = 2;\n  light.distance = Infinity;\n  light.position.set(0, 10, 0);\n  scene.add(light);\n\n  function resizeRendererToDisplaySize(renderer) {\n    const canvas = renderer.domElement;\n    const width = canvas.clientWidth;\n    const height = canvas.clientHeight;\n    const needResize = canvas.width !== width || canvas.height !== height;\n    if (needResize) {\n      renderer.setSize(width, height, false);\n    }\n    return needResize;\n  }\n\n  function render(time) {\n    time *= 0.001;\n\n    if (resizeRendererToDisplaySize(renderer)) {\n      const canvas = renderer.domElement;\n      camera.aspect = canvas.clientWidth / canvas.clientHeight;\n      camera.updateProjectionMatrix();\n    }\n\n    renderer.render(scene, camera);\n\n    requestAnimationFrame(render);\n  }\n\n  requestAnimationFrame(render);\n};\n\nexport default run;\n","import { useEffect } from \"react\";\nimport run from \"../framework/main\";\n\nconst Framework = () => {\n  useEffect(() => {\n    const canvas = document.querySelector(\"#c\");\n    run(canvas);\n  });\n\n  return (\n    <main>\n      <canvas id=\"c\"></canvas>\n      <div id=\"loading\">\n        <div className=\"progress\">\n          <div className=\"progressbar\"></div>\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default Framework;\n","import \"./App.css\";\nimport { Link, BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Forwarder from \"./components/Forwarder\";\nimport Framework from \"./components/Framework\";\n\nconst App = () => {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\">\n          <Forwarder />\n        </Route>\n        <Route exact path=\"/framework/\">\n          <Link to=\"/play\">play</Link>\n        </Route>\n        <Route path={[\"/play\", \"/framework/play\"]}>\n          <Framework />\n        </Route>\n        <Route path=\"/:whatever\">\n          <p>page not found</p>\n        </Route>\n      </Switch>\n    </Router>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}