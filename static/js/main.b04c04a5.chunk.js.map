{"version":3,"sources":["components/Forwarder.js","framework/main.js","components/Framework.js","App.js","index.js"],"names":["Forwarder","history","useHistory","useEffect","push","makeInstance","geometry","color","x","scene","material","THREE","cube","add","position","run","canvas","renderer","camera","z","cubes","light","set","requestAnimationFrame","render","time","domElement","width","clientWidth","height","clientHeight","needResize","setSize","resizeRendererToDisplaySize","aspect","updateProjectionMatrix","forEach","ndx","rot","rotation","y","Framework","document","querySelector","id","App","exact","path","to","ReactDOM","StrictMode","getElementById"],"mappings":"0NAWeA,EARG,WAChB,IAAMC,EAAUC,cAIhB,OAHAC,qBAAU,WACRF,EAAQG,KAAK,iBAER,M,OCKHC,EAAe,SAACC,EAAUC,EAAOC,EAAGC,GACxC,IAAMC,EAAW,IAAIC,IAAwB,CAAEJ,UAEzCK,EAAO,IAAID,IAAWL,EAAUI,GAKtC,OAJAD,EAAMI,IAAID,GAEVA,EAAKE,SAASN,EAAIA,EAEXI,GA4CMG,EAzCH,SAACC,GACX,IAAMC,EAAW,IAAIN,IAAoB,CAAEK,WACrCE,EAAS,IAAIP,IAAwB,GAAI,EAAG,GAAK,GACvDO,EAAOJ,SAASK,EAAI,EACpB,IAAMV,EAAQ,IAAIE,IACZL,EAAW,IAAIK,IAAkB,EAAG,EAAG,GACvCS,EAAQ,CACZf,EAAaC,EAAU,QAAU,EAAGG,GACpCJ,EAAaC,EAAU,SAAW,EAAGG,GACrCJ,EAAaC,EAAU,SAAU,EAAGG,IAI9BY,EAAQ,IAAIV,IAAuB,SAAU,GACnDU,EAAMP,SAASQ,KAAK,EAAG,EAAG,GAC1Bb,EAAMI,IAAIQ,GAuBZE,uBApBA,SAASC,EAAOC,GAEd,GADAA,GAAQ,KAzCwB,SAACR,GACnC,IAAMD,EAASC,EAASS,WAClBC,EAAQX,EAAOY,YACfC,EAASb,EAAOc,aAChBC,EAAaf,EAAOW,QAAUA,GAASX,EAAOa,SAAWA,EAI/D,OAHIE,GACFd,EAASe,QAAQL,EAAOE,GAAQ,GAE3BE,EAkCDE,CAA4BhB,GAAW,CACzC,IAAMD,EAASC,EAASS,WACxBR,EAAOgB,OAASlB,EAAOY,YAAcZ,EAAOc,aAC5CZ,EAAOiB,yBAGTf,EAAMgB,SAAQ,SAACxB,EAAMyB,GACnB,IACMC,EAAMb,GADE,EAAU,GAANY,GAElBzB,EAAK2B,SAAS/B,EAAI8B,EAClB1B,EAAK2B,SAASC,EAAIF,KAGpBrB,EAASO,OAAOf,EAAOS,GAEvBK,sBAAsBC,O,OC/CXiB,EATG,WAMhB,OALAtC,qBAAU,WACR,IAAMa,EAAS0B,SAASC,cAAc,MACtC5B,EAAIC,MAGC,wBAAQ4B,GAAG,OCiBLC,EArBH,WACV,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,cAAlB,SACE,cAAC,IAAD,CAAMC,GAAG,QAAT,oBAEF,cAAC,IAAD,CAAOD,KAAM,CAAC,QAAS,mBAAvB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,aAAZ,SACE,uDCdVE,IAASzB,OACP,cAAC,IAAM0B,WAAP,UACE,cAAC,EAAD,MAEFR,SAASS,eAAe,W","file":"static/js/main.b04c04a5.chunk.js","sourcesContent":["import { useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Forwarder = () => {\n  const history = useHistory();\n  useEffect(() => {\n    history.push(\"/framework\");\n  });\n  return null;\n};\n\nexport default Forwarder;","import * as THREE from \"three\";\n\nconst resizeRendererToDisplaySize = (renderer) => {\n  const canvas = renderer.domElement;\n  const width = canvas.clientWidth;\n  const height = canvas.clientHeight;\n  const needResize = canvas.width !== width || canvas.height !== height;\n  if (needResize) {\n    renderer.setSize(width, height, false);\n  }\n  return needResize;\n};\n\nconst makeInstance = (geometry, color, x, scene) => {\n  const material = new THREE.MeshPhongMaterial({ color });\n\n  const cube = new THREE.Mesh(geometry, material);\n  scene.add(cube);\n\n  cube.position.x = x;\n\n  return cube;\n};\n\nconst run = (canvas) => {\n  const renderer = new THREE.WebGLRenderer({ canvas });\n  const camera = new THREE.PerspectiveCamera(75, 2, 0.1, 5);\n  camera.position.z = 2;\n  const scene = new THREE.Scene();\n  const geometry = new THREE.BoxGeometry(1, 1, 1);\n  const cubes = [\n    makeInstance(geometry, 0x44aa88, 0, scene),\n    makeInstance(geometry, 0x8844aa, -2, scene),\n    makeInstance(geometry, 0xaa8844, 2, scene),\n  ];\n\n  {\n    const light = new THREE.DirectionalLight(0xffffff, 1);\n    light.position.set(-1, 2, 4);\n    scene.add(light);\n  }\n\n  function render(time) {\n    time *= 0.001;\n    if (resizeRendererToDisplaySize(renderer)) {\n      const canvas = renderer.domElement;\n      camera.aspect = canvas.clientWidth / canvas.clientHeight;\n      camera.updateProjectionMatrix();\n    }\n\n    cubes.forEach((cube, ndx) => {\n      const speed = 1 + ndx * 0.1;\n      const rot = time * speed;\n      cube.rotation.x = rot;\n      cube.rotation.y = rot;\n    });\n\n    renderer.render(scene, camera);\n\n    requestAnimationFrame(render);\n  }\n\n  requestAnimationFrame(render);\n};\n\nexport default run;\n","import { useEffect } from \"react\";\nimport run from \"../framework/main\";\n\nconst Framework = () => {\n  useEffect(() => {\n    const canvas = document.querySelector(\"#c\");\n    run(canvas);\n  });\n\n  return <canvas id=\"c\"></canvas>;\n};\n\nexport default Framework;\n","import \"./App.css\";\nimport { Link, BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Forwarder from \"./components/Forwarder\";\nimport Framework from \"./components/Framework\";\n\nconst App = () => {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\">\n          <Forwarder />\n        </Route>\n        <Route exact path=\"/framework/\">\n          <Link to=\"/play\">play</Link>\n        </Route>\n        <Route path={[\"/play\", \"/framework/play\"]}>\n          <Framework />\n        </Route>\n        <Route path=\"/:whatever\">\n          <p>page not found</p>\n        </Route>\n      </Switch>\n    </Router>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}