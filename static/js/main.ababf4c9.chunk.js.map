{"version":3,"sources":["components/Forwarder.js","components/Framework.js","utils/webgl-utils.js","App.js","index.js"],"names":["Forwarder","history","useHistory","useEffect","push","Framework","createShader","gl","type","source","shader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","console","log","getShaderInfoLog","deleteShader","document","querySelector","getContext","Error","program","vertexShader","fragmentShader","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","deleteProgram","VERTEX_SHADER","FRAGMENT_SHADER","positionAttributeLocation","getAttribLocation","positionBuffer","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","Float32Array","STATIC_DRAW","vao","createVertexArray","bindVertexArray","enableVertexAttribArray","FLOAT","offset","vertexAttribPointer","canvas","multiplier","width","clientWidth","height","clientHeight","resizeCanvasToDisplaySize","viewport","clearColor","clear","CLEAR_BUFFER_BIT","useProgram","primitiveType","TRIANGLES","drawArrays","id","App","exact","path","to","ReactDOM","render","StrictMode","getElementById"],"mappings":"yNAWeA,EARG,WAChB,IAAMC,EAAUC,cAIhB,OAHAC,qBAAU,WACRF,EAAQG,KAAK,iBAER,M,WCsGMC,EA3GG,WAChB,IAAMC,EAAe,SAACC,EAAIC,EAAMC,GAC9B,IAAIC,EAASH,EAAGD,aAAaE,GAI7B,GAHAD,EAAGI,aAAaD,EAAQD,GACxBF,EAAGK,cAAcF,GACHH,EAAGM,mBAAmBH,EAAQH,EAAGO,gBAE7C,OAAOJ,EAGTK,QAAQC,IAAIT,EAAGU,iBAAiBP,IAChCH,EAAGW,aAAaR,IA6FlB,OA7EAP,qBAAU,WACR,IACII,EADSY,SAASC,cAAc,MACpBC,WAAW,UAC3B,IAAKd,EAAI,MAAM,IAAIe,MAAM,kBACzB,IAoCIC,EArDgB,SAAChB,EAAIiB,EAAcC,GACvC,IAAIF,EAAUhB,EAAGmB,gBAKjB,GAJAnB,EAAGoB,aAAaJ,EAASC,GACzBjB,EAAGoB,aAAaJ,EAASE,GACzBlB,EAAGqB,YAAYL,GACDhB,EAAGsB,oBAAoBN,EAAShB,EAAGuB,aAE/C,OAAOP,EAETR,QAAQC,IAAIT,EAAGwB,kBAAkBR,IACjChB,EAAGyB,cAAcT,GA2CHG,CAAcnB,EAPTD,EAAaC,EAAIA,EAAG0B,cA7BjB,6TA8BD3B,EACnBC,EACAA,EAAG2B,gBAjBmB,mXAuBpBC,EAA4B5B,EAAG6B,kBAAkBb,EAAS,cAC1Dc,EAAiB9B,EAAG+B,eACxB/B,EAAGgC,WAAWhC,EAAGiC,aAAcH,GAE/B9B,EAAGkC,WAAWlC,EAAGiC,aAAc,IAAIE,aADnB,CAAC,EAAG,EAAG,EAAG,GAAK,GAAK,IACwBnC,EAAGoC,aAC/D,IAAIC,EAAMrC,EAAGsC,oBACbtC,EAAGuC,gBAAgBF,GACnBrC,EAAGwC,wBAAwBZ,GAC3B,IACI3B,EAAOD,EAAGyC,MAGVC,EAAS,EACb1C,EAAG2C,oBACDf,EANS,EAQT3B,GANc,EACH,EAQXyC,GC5DS,SAAmCE,EAAQC,GACxDA,EAAaA,GAAc,EAC3B,IAAMC,EAASF,EAAOG,YAAeF,EAAa,EAC5CG,EAASJ,EAAOK,aAAeJ,EAAa,GAC9CD,EAAOE,QAAUA,GAAUF,EAAOI,SAAWA,KAC/CJ,EAAOE,MAASA,EAChBF,EAAOI,OAASA,GDwDhBE,CAA0BlD,EAAG4C,QAC7B5C,EAAGmD,SAAS,EAAG,EAAGnD,EAAG4C,OAAOE,MAAO9C,EAAG4C,OAAOI,QAC7ChD,EAAGoD,WAAW,EAAG,EAAG,EAAG,GACvBpD,EAAGqD,MAAMrD,EAAGsD,kBACZtD,EAAGuD,WAAWvC,GACdhB,EAAGuC,gBAAgBF,GACnB,IAAImB,EAAgBxD,EAAGyD,UACvBf,EAAS,EAET1C,EAAG0D,WAAWF,EAAed,EADjB,MAMP,wBAAQiB,GAAG,IAAIX,OAAO,MAAMF,MAAM,SEjF5Bc,EArBH,WACV,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,cAAlB,SACE,cAAC,IAAD,CAAMC,GAAG,QAAT,oBAEF,cAAC,IAAD,CAAOD,KAAM,CAAC,QAAS,mBAAvB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,aAAZ,SACE,uDCdVE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFtD,SAASuD,eAAe,W","file":"static/js/main.ababf4c9.chunk.js","sourcesContent":["import { useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Forwarder = () => {\n  const history = useHistory();\n  useEffect(() => {\n    history.push(\"/framework\");\n  });\n  return null;\n};\n\nexport default Forwarder;","import { useEffect } from \"react\";\nimport resizeCanvasToDisplaySize from \"../utils/webgl-utils.js\";\n\nconst Framework = () => {\n  const createShader = (gl, type, source) => {\n    let shader = gl.createShader(type);\n    gl.shaderSource(shader, source);\n    gl.compileShader(shader);\n    let success = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n    if (success) {\n      return shader;\n    }\n\n    console.log(gl.getShaderInfoLog(shader));\n    gl.deleteShader(shader);\n  };\n\n  const createProgram = (gl, vertexShader, fragmentShader) => {\n    let program = gl.createProgram();\n    gl.attachShader(program, vertexShader);\n    gl.attachShader(program, fragmentShader);\n    gl.linkProgram(program);\n    let success = gl.getProgramParameter(program, gl.LINK_STATUS);\n    if (success) {\n      return program;\n    }\n    console.log(gl.getProgramInfoLog(program));\n    gl.deleteProgram(program);\n  };\n\n  useEffect(() => {\n    let canvas = document.querySelector(\"#c\");\n    let gl = canvas.getContext(\"webgl2\");\n    if (!gl) throw new Error(\"no gl2 for you\");\n    var vertexShaderSource = `#version 300 es\n \n// an attribute is an input (in) to a vertex shader.\n// It will receive data from a buffer\nin vec4 a_position;\n \n// all shaders have a main function\nvoid main() {\n \n  // gl_Position is a special variable a vertex shader\n  // is responsible for setting\n  gl_Position = a_position;\n}\n`;\n\n    var fragmentShaderSource = `#version 300 es\n \n// fragment shaders don't have a default precision so we need\n// to pick one. highp is a good default. It means \"high precision\"\nprecision highp float;\n \n// we need to declare an output for the fragment shader\nout vec4 outColor;\n \nvoid main() {\n  // Just set the output to a constant reddish-purple\n  outColor = vec4(1, 0, 0.5, 1);\n}\n`;\n    let vertexShader = createShader(gl, gl.VERTEX_SHADER, vertexShaderSource);\n    let fragmentShader = createShader(\n      gl,\n      gl.FRAGMENT_SHADER,\n      fragmentShaderSource\n    );\n\n    let program = createProgram(gl, vertexShader, fragmentShader);\n\n    let positionAttributeLocation = gl.getAttribLocation(program, \"a_position\");\n    let positionBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\n    var positions = [0, 0, 0, 0.5, 0.7, 0];\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(positions), gl.STATIC_DRAW);\n    let vao = gl.createVertexArray();\n    gl.bindVertexArray(vao);\n    gl.enableVertexAttribArray(positionAttributeLocation);\n    let size = 2;\n    let type = gl.FLOAT;\n    let normalize = false;\n    let stride = 0;\n    let offset = 0;\n    gl.vertexAttribPointer(\n      positionAttributeLocation,\n      size,\n      type,\n      normalize,\n      stride,\n      offset\n    );\n    resizeCanvasToDisplaySize(gl.canvas);\n    gl.viewport(0, 0, gl.canvas.width, gl.canvas.height);\n    gl.clearColor(0, 0, 0, 0);\n    gl.clear(gl.CLEAR_BUFFER_BIT);\n    gl.useProgram(program);\n    gl.bindVertexArray(vao);\n    let primitiveType = gl.TRIANGLES;\n    offset = 0;\n    let count = 3;\n    gl.drawArrays(primitiveType, offset, count);\n\n\n  });\n\n  return <canvas id=\"c\" height=\"480\" width=\"640\" ></canvas>;\n};\n\nexport default Framework;\n","/*\n * Copyright 2021, GFXFundamentals.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of GFXFundamentals. nor the names of his\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nexport default function resizeCanvasToDisplaySize(canvas, multiplier) {\n  multiplier = multiplier || 1;\n  const width  = canvas.clientWidth  * multiplier | 0;\n  const height = canvas.clientHeight * multiplier | 0;\n  if (canvas.width !== width ||  canvas.height !== height) {\n    canvas.width  = width;\n    canvas.height = height;\n    return true;\n  }\n  return false;\n}","import \"./App.css\";\nimport { Link, BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Forwarder from \"./components/Forwarder\";\nimport Framework from \"./components/Framework\";\n\nconst App = () => {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\">\n          <Forwarder />\n        </Route>\n        <Route exact path=\"/framework/\">\n          <Link to=\"/play\">play</Link>\n        </Route>\n        <Route path={[\"/play\", \"/framework/play\"]}>\n          <Framework />\n        </Route>\n        <Route path=\"/:whatever\">\n          <p>page not found</p>\n        </Route>\n      </Switch>\n    </Router>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}