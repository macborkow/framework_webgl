{"version":3,"sources":["components/Forwarder.js","framework/main.js","components/Framework.js","App.js","index.js"],"names":["Forwarder","history","useHistory","useEffect","push","run","canvas","renderer","THREE","camera","position","z","scene","background","geometry","makeInstance","color","x","material","cube","add","objects","addSolidGeometry","y","obj","addObject","side","hue","Math","random","setHSL","createMaterial","cubes","light","set","requestAnimationFrame","render","time","domElement","pixelRatio","window","devicePixelRatio","width","clientWidth","height","clientHeight","needResize","setSize","resizeRendererToDisplaySize","aspect","updateProjectionMatrix","forEach","ndx","rot","rotation","Framework","document","querySelector","id","App","exact","path","to","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.95023cb5.chunk.js","sourcesContent":["import { useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Forwarder = () => {\n  const history = useHistory();\n  useEffect(() => {\n    history.push(\"/framework\");\n  });\n  return null;\n};\n\nexport default Forwarder;","import * as THREE from \"three\";\n\nconst run = (canvas) => {\n  const renderer = new THREE.WebGLRenderer({ canvas });\n  const camera = new THREE.PerspectiveCamera(40, 2, 0.1, 1000);\n  camera.position.z = 120;\n  const scene = new THREE.Scene();\n  scene.background = new THREE.Color(0xaaaaaa);\n  const geometry = new THREE.BoxGeometry(1, 1, 1);\n\n  const resizeRendererToDisplaySize = (renderer) => {\n    const canvas = renderer.domElement;\n    const pixelRatio = window.devicePixelRatio;\n    const width = (canvas.clientWidth * pixelRatio) | 0;\n    const height = (canvas.clientHeight * pixelRatio) | 0;\n    const needResize = canvas.width !== width || canvas.height !== height;\n    if (needResize) {\n      renderer.setSize(width, height, false);\n    }\n    return needResize;\n  };\n\n  const makeInstance = (geometry, color, x) => {\n    const material = new THREE.MeshPhongMaterial({ color });\n\n    const cube = new THREE.Mesh(geometry, material);\n    scene.add(cube);\n\n    cube.position.x = x;\n\n    return cube;\n  };\n\n  const objects = [];\n  const spread = 15;\n\n  const addObject = (x, y, obj) => {\n    obj.position.x = x * spread;\n    obj.position.y = y * spread;\n\n    scene.add(obj);\n    objects.push(obj);\n  };\n\n  const createMaterial = () => {\n    const material = new THREE.MeshPhongMaterial({side:THREE.DoubleSide});\n\n    const hue = Math.random();\n    const saturation = 1;\n    const luminance = 0.5;\n    material.color.setHSL(hue, saturation, luminance);\n\n    return material;\n  }\n\n  const addSolidGeometry = (x, y, geometry) => {\n    const mesh = new THREE.Mesh(geometry, createMaterial());\n    addObject(x, y, mesh);\n  }\n\n  addSolidGeometry(-2,-2, new THREE.BoxGeometry(6,6,6));\n  addSolidGeometry(-2,0, new THREE.TorusGeometry(10, 2, 4, 20, 4));\n\n  const cubes = [\n    makeInstance(geometry, 0x44aa88, 0, scene),\n    makeInstance(geometry, 0x8844aa, -2, scene),\n    makeInstance(geometry, 0xaa8844, 2, scene),\n  ];\n\n  {\n    const light = new THREE.DirectionalLight(0xffffff, 1);\n    light.position.set(-1, 2, 4);\n    scene.add(light);\n  }\n\n  function render(time) {\n    time *= 0.001;\n    if (resizeRendererToDisplaySize(renderer)) {\n      const canvas = renderer.domElement;\n      camera.aspect = canvas.clientWidth / canvas.clientHeight;\n      camera.updateProjectionMatrix();\n    }\n\n    cubes.forEach((cube, ndx) => {\n      const speed = 1 + ndx * 0.1;\n      const rot = time * speed;\n      cube.rotation.x = rot;\n      cube.rotation.y = rot;\n    });\n\n    renderer.render(scene, camera);\n\n    requestAnimationFrame(render);\n  }\n\n  requestAnimationFrame(render);\n};\n\nexport default run;\n","import { useEffect } from \"react\";\nimport run from \"../framework/main\";\n\nconst Framework = () => {\n  useEffect(() => {\n    const canvas = document.querySelector(\"#c\");\n    run(canvas);\n  });\n\n  return <canvas id=\"c\"></canvas>;\n};\n\nexport default Framework;\n","import \"./App.css\";\nimport { Link, BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Forwarder from \"./components/Forwarder\";\nimport Framework from \"./components/Framework\";\n\nconst App = () => {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\">\n          <Forwarder />\n        </Route>\n        <Route exact path=\"/framework/\">\n          <Link to=\"/play\">play</Link>\n        </Route>\n        <Route path={[\"/play\", \"/framework/play\"]}>\n          <Framework />\n        </Route>\n        <Route path=\"/:whatever\">\n          <p>page not found</p>\n        </Route>\n      </Switch>\n    </Router>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}